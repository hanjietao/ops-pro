<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pepper.project.pm.note.mapper.PmNoteMapper">

	<resultMap type="PmNote" id="NoteResult">
		<id     property="id"         		column="id"         />
		<result property="content"         column="content"        />
        <result property="userId"         column="user_id"        />
		<result property="propertyId"       column="property_id"         />
		<result property="status"           column="status"         />
		<result property="replyStatus"           column="reply_status"         />
		<result property="replyContent"           column="reply_content"         />
		<result property="createTime"       column="create_time"            />
		<result property="createBy"     	column="create_by"    />
		<result property="updateTime"       column="update_time"           />
		<result property="updateBy"         column="update_by"                />
		<association property="property"    column="id" javaType="Property" resultMap="PropertyResult" />
        <association property="clientUser"    column="userId" javaType="ClientUser" resultMap="ClientUserResult" />
    </resultMap>

	<resultMap type="Property" id="PropertyResult">
		<id     property="id"         		column="id"         />
		<result property="propertyCode"         column="property_code"        />
		<result property="propertyName"         column="property_name"        />
		<result property="areaId"       column="area_id"         />
		<result property="status"           column="status"         />
	</resultMap>

    <resultMap type="ClientUser" id="ClientUserResult">
        <id     property="userId"         		column="user_id"         />
        <result property="userName"         column="user_name"        />
        <result property="nikeName"         column="nike_name"        />
        <result property="userMobile"           column="user_mobile"         />
        <result property="status"           column="status"         />
    </resultMap>

	<sql id="selectNoteVo">
       select bg.create_time, bg.create_by, bg.update_time, bg.update_by, bg.id, bg.content,bg.user_id,
       bg.property_id,bg.status,bg.reply_status,bg.reply_content,
       p.id,p.property_code,p.property_name,p.area_id,p.status,
       cu.user_id,cu.user_name,cu.nike_name,cu.user_mobile,cu.status
        from pm_note bg
        left join pm_property p on bg.property_id = p.id
        left join sm_client_user cu on bg.user_id = cu.user_id
    </sql>

	<select id="selectNoteById" parameterType="Integer" resultMap="NoteResult">
		<include refid="selectNoteVo"/>
		where bg.id = #{id}
	</select>

 	<select id="selectNoteList" parameterType="Property" resultMap="NoteResult">
		<include refid="selectNoteVo"/>
		<where>
            <if test="userId != null and userId != ''">
                AND bg.userId = #{userId}
            </if>
			<if test="propertyId != null and propertyId != ''">
				AND bg.property_id = #{propertyId}
			</if>
			<if test="status != null and status != ''">
				AND bg.status = #{status}
			</if>
			<if test="replyStatus != null and replyStatus != ''">
				AND bg.reply_status = #{replyStatus}
			</if>
			<if test="id != null and id != 0">
				AND bg.id = #{id}
			</if>
		</where>
	</select>

	<insert id="insertNote" parameterType="PmNote">
		insert into pm_note (
		<if test="content != null and content != '' ">content, </if>
		<if test="propertyId != null and propertyId != '' ">property_id, </if>
        <if test="userId != null and userId != '' ">user_id, </if>
		<if test="status != null and status != '' ">status, </if>
		<if test="replyStatus != null and replyStatus != '' ">reply_status, </if>
		<if test="replyContent != null and replyContent != '' ">reply_content, </if>
		<if test="createBy != null and createBy != ''">create_by,</if>
		<if test="updateBy != null and updateBy != ''">update_by,</if>
		create_time,
		update_time
		)values(
		<if test="content != null and content != ''">#{content}, </if>
		<if test="propertyId != null and propertyId != ''">#{propertyId}, </if>
        <if test="userId != null and userId != ''">#{userId}, </if>
		<if test="status != null and status != '' ">#{status}, </if>
		<if test="replyStatus != null and replyStatus != '' ">#{replyStatus}, </if>
		<if test="replyContent != null and replyContent != '' ">#{replyContent}, </if>
		<if test="createBy != null and createBy != ''">#{createBy},</if>
		<if test="updateBy != null and updateBy != ''">#{updateBy},</if>
		sysdate(),
		sysdate()
		)
	</insert>

	<update id="updateNote" parameterType="PmNote">
		update pm_note
		<set>
			<if test="content != null and content != ''">content = #{content}, </if>
			<if test="propertyId != null">property_id = #{propertyId}, </if>
			<if test="userId != null">user_id = #{userId}, </if>
			<if test="status != null">status = #{status}, </if>
			<if test="replyStatus != null">reply_status = #{replyStatus}, </if>
			<if test="replyContent != null">reply_content = #{replyContent}, </if>
			<if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
			update_time = sysdate()
		</set>
		where id = #{id}
	</update>

    <delete id="deleteNoteByIds" parameterType="String">
        delete from pm_note where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>
